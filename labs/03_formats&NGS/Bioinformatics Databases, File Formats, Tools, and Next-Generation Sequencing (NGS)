Topics:
1.Bioinformatics Databases:
 NCBI: A comprehensive resource for nucleotide and protein sequences, offering tools like BLAST.
 Ensembl: Focuses on genome annotation and comparative genomics.
 UCSC Genome Browser: Offers visualization tools for genomic data and annotations
2.File Formats in Bioinformatics:
 FASTA: A FASTA file contains a sequence identifier (starting with a > symbol) followed by the sequence itself on the next lines. Example:
  >BRCA1
  ATGCGTAGCTAGCTAGCATCG...

 GFF: Each line describes a genomic feature (e.g., a gene) by its start and end position on a specific chromosome.
  chr1 . gene 1000 5000 . + . ID=gene1

 VCF: Each line describes the location of a variant, the reference base, the alternative base, and additional information such as genotype quality and depth.
  #CHROM POS ID REF ALT QUAL FILTER INFO
  20 14370 . G A 29.7 PASS AC=1;AF=0.5;AN=2;DP=14

3.Tools for Accessing and Retrieving Data Programmatically: Biopython
 NCBI: Retrieve nucleotide and protein sequences.
 SRA (Sequence Read Archive): Download real sequencing data in FASTQ format.
 Access NCBI and retrieve data using biopython in NCBI_query.py file

4. Next-Generation Sequencing (NGS):
 SNPs(Single Nucleotide Polymorphisms) are the most common type of genetic variation in DNA sequences.
 Variant calling is the process of identifying variants—such as SNPs or indels—in DNA sequences by comparing sequencing reads to a reference genome.

 Illumina: Used for short-read, high-throughput sequencing (genome, RNA, exome sequencing).
 PacBio: Used for long-read sequencing to resolve complex genome regions.
 Oxford Nanopore: Used for ultra-long reads and real-time sequencing.

 Computational tools for NGS:
  BWA ( Burrows-Wheeler Aligner) : https://github.com/lh3/bwa
  SAMTools : http://www.htslib.org/
  BCFtools : https://www.htslib.org/download/

5.NGS File Formats:
 FASTQ -Stores raw sequencing reads and quality scores.
  Each read is represented by four lines: the sequence identifier, the DNA sequence, a plus symbol, and the quality scores.

  @SEQ_ID
  GATTTGGGGTTCAAAGCAGTATCGATCAAATAGT
  +
  !''*((((***+))%%%++)(%%%%).1***-+*

 SAM/BAM -  Stores aligned reads mapped to the reference genome.
  Each line represents an aligned read, showing where it maps to the reference genome, its mapping quality, and other metrics.
  SRR12345678 0 chr1 100 60 50M * 0 0 ATGCATGCTAGCTGACTGACGATGC +++++++++++IIIIIIIIIIIIIIII

 VCF(Variant Call Format) - Stores called variants, such as SNPs and indels, after alignment.


6. Lab Activity: Integrating NGS Analysis with PubMed Parsing Using Biopython
 1. Parsing PubMed with Biopython
  Write a Python script using Biopython to search for research articles related to the TP53 gene and cancer. Retrieve and display the titles, authors, and abstracts of relevant articles.
   Query PubMed for the search term "TP53 AND cancer."
   Retrieve the title, authors, and abstract for each article.
   Limit the search to a maximum of 5 articles to avoid large outputs.
2. Retrieve Data and Analyze Variants in TP53
 Part 1: Query NCBI for TP53 Gene Sequence
  Use Biopython to fetch the TP53 gene sequence as a reference in FASTA format from the NCBI database. Use Entrez.esearch() and Entrez.efetch().
   Write a Python script that:
    Queries NCBI for the TP53 gene.
    Retrieves the sequence in FASTA format.
    Prints the FASTA sequence.
    Save the FASTA sequence to a file for later usage.
 Part 2: Programmatically Download a FASTQ File from SRA
  Programmatically download a FASTQ file containing sequencing reads related to TP53 from the SRA (Sequence Read Archive) using the pysradb library.
  Write a Python script that:
   Queries the SRA database for TP53-related sequencing data.
   Downloads a FASTQ file using the pysradb library.
   Part 3: Perform NGS Workflow to Identify Variants
   Perform an NGS workflow that includes:
   Aligning the FASTQ reads to the TP53 reference sequence using BWA.
   Converting SAM to BAM, sorting, and indexing the BAM file using SAMtools.
   Calling variants (SNPs/indels) using BCFtools.
3. Cross-Reference Variants with PubMed Literature
 Parse the VCF file generated in the NGS workflow, and for each SNP or indel, search PubMed to check if there are any publications referencing that specific variant.
 Use SNP ID if available, otherwise use chromosome and position together with TP53 in the pubmed search term, such as "chr17:7675083 AND TP53"

  The VCF file contains important information for each variant (SNP or indel) that you can use to query PubMed:
   Chromosome (CHROM): The chromosome number on which the variant was detected.
   Position (POS): The position of the variant on the chromosome.
   SNP ID (ID): If the variant is a known SNP, it may have a recognized SNP ID (e.g., rs123456).
   Reference Allele (REF): The nucleotide(s) in the reference genome at this position.
   Alternate Allele (ALT): The nucleotide(s) that are present in the sample that differ from the reference.
   For example:
    #CHROM POS ID REF ALT QUAL FILTER INFO
    chr17  7675083 rs123456 C  T  .     PASS  .
   Chromosome 17: Where the variant was found.
   Position 7675083: The specific genomic position.
   SNP ID rs123456: The SNP ID, which could be used in a PubMed search.
   Reference Allele C and Alternate Allele T: The change that occurred.